from flask import Flask, render_template_string
import requests
from requests.auth import HTTPBasicAuth

app = Flask(__name__)

def generate_url(cluster_identifier, endpoint):
    base_url = f"https://{cluster_identifier}-elasticserch"
    if endpoint == "status":
        return f"{base_url}/api/status"
    elif endpoint == "health":
        return f"{base_url}/_cluster/health"

@app.route("/")
def home():
    # Credentials
    username = 'your_username'
    password = 'your_password'

    clusters = [f"prod{i}" for i in range(1, 8)]
    results = []

    for cluster in clusters:
        status_url = generate_url(cluster, "status")
        health_url = generate_url(cluster, "health")

        status_response = requests.get(status_url, auth=HTTPBasicAuth(username, password))
        health_response = requests.get(health_url, auth=HTTPBasicAuth(username, password))

        status_data = status_response.json()
        health_data = health_response.json()

        combined_data = {
            "cluster_identifier": cluster,
            "name": status_data["name"],
            "version": status_data["version"]["number"],
            "os_platform": status_data["metrics"]["os"]["platform"],
            "apm_status": status_data["status"]["plugins"]["apm"]["level"],
            "cluster_name": health_data["cluster_name"],
            "cluster_status": health_data["status"],
            "number_of_nodes": health_data["number_of_nodes"],
            "active_shards": health_data["active_shards"]
        }

        results.append(combined_data)

    # HTML template with placeholders for data
    template = """
    <!DOCTYPE html>
    <html>
    <head>
        <title>Kibana, APM, and Cluster Health Status</title>
    </head>
    <body>
        <table border="1">
            <tr>
                <th>Cluster Identifier</th>
                <th>Instance Name</th>
                <th>Version</th>
                <th>OS Platform</th>
                <th>APM Service Status</th>
                <th>Cluster Name</th>
                <th>Cluster Status</th>
                <th>Number of Nodes</th>
                <th>Active Shards</th>
            </tr>
            {% for data in results %}
            <tr>
                <td>{{ data.cluster_identifier }}</td>
                <td>{{ data.name }}</td>
                <td>{{ data.version }}</td>
                <td>{{ data.os_platform }}</td>
                <td>{{ data.apm_status }}</td>
                <td>{{ data.cluster_name }}</td>
                <td>{{ data.cluster_status }}</td>
                <td>{{ data.number_of_nodes }}</td>
                <td>{{ data.active_shards }}</td>
            </tr>
            {% endfor %}
        </table>
    </body>
    </html>
    """

    # Render HTML with data
    return render_template_string(template, results=results)

if __name__ == "__main__":
    app.run(debug=True)
