#!/bin/bash

# Sample input list
servers_input="server1 rack=1
server2 rack=3
server3 rack=5
server4 rack=1"

# Convert the servers_input into an associative array with server as key and rack as value
declare -A servers_rack
while read -r line; do
    server=$(echo "$line" | awk '{print $1}')
    rack=$(echo "$line" | awk '{print $2}' | sed 's/rack=//')
    servers_rack["$server"]=$rack
done <<< "$servers_input"

# Function to get servers for a patching window while ensuring rack awareness
get_servers_for_window() {
    local -n result=$1
    local count=$2
    local used_racks=()

    for server in "${!servers_rack[@]}"; do
        rack=${servers_rack[$server]}
        if [[ ! " ${used_racks[@]} " =~ " ${rack} " ]]; then
            result+=("$server")
            unset servers_rack["$server"]
            used_racks+=("$rack")
            if [[ ${#result[@]} -eq $count ]]; then
                break
            fi
        fi
    done
}

# Distribute servers across the patching windows
for day in $(seq 1 30); do
    for window in "0 to 4 AM PST" "6 PM to 10 PM PST"; do
        # Extract servers for this window with rack awareness
        current_servers=()
        get_servers_for_window current_servers $servers_per_window

        # Convert array to comma-separated string
        csv=$(echo "${current_servers[@]}" | tr ' ' ',')

        # Print the results
        if [ ! -z "$csv" ]; then
            echo "$day: $window: $csv"
        fi
    done
done
