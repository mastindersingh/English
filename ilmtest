- hosts: localhost
  vars:
    es_hosts:
      - "pro1:443"
      - "pro2:443"
      # ... Add other hosts as needed
    es_user: "elastic"
    es_pass: ""
  tasks:
    - name: Process each Elasticsearch host
      loop: "{{ es_hosts }}"
      loop_control:
        loop_var: "es_host"
      block:
        - name: Get list of all indices from Elasticsearch for {{ es_host }}
          uri:
            url: "https://{{ es_host }}/_cat/indices?format=json"
            method: GET
            return_content: yes
            user: "{{ es_user }}"
            password: "{{ es_pass }}"
            validate_certs: no
            force_basic_auth: yes
          register: indices_result

        - name: Check ILM policy for each index of {{ es_host }}
          uri:
            url: "https://{{ es_host }}/{{ item.index }}/_ilm/explain"
            method: GET
            return_content: yes
            user: "{{ es_user }}"
            password: "{{ es_pass }}"
            validate_certs: no
            force_basic_auth: yes
          loop: "{{ indices_result.json }}"
          register: ilm_result
          ignore_errors: yes
          when: indices_result.json is defined and indices_result.json != ''

        - name: Create list of indices with their ILM policy status and details
          set_fact:
            indices_ilm_info: >-
              {{ indices_ilm_info | default([]) + 
              [{ 'index': item.index, 
                 'ilm_policy': (item.json.indices[item.index].policy if 'policy' in item.json.indices[item.index] else 'None'), 
                 'time_since_index_creation': (item.json.indices[item.index].time_since_index_creation if 'time_since_index_creation' in item.json.indices[item.index] else 'Not available') 
              }] }}
          loop: "{{ ilm_result.results }}"
          when: ilm_result.results is defined and ilm_result.results != ''

        - name: Convert list of indices and ILM policies to CSV format
          set_fact:
            csv_content: "Index,ILM Policy,Time Since Index Creation\n{% for item in indices_ilm_info %}{{ item.index }},{{ item.ilm_policy }},{{ item.time_since_index_creation }}\n{% endfor %}"

        - name: Write indices and their ILM policies to CSV for {{ es_host }}
          copy:
            content: "{{ csv_content }}"
            dest: "/new/path/indices_ilm_policies_{{ es_host | replace(':', '_') | replace('.', '_') }}.csv"
